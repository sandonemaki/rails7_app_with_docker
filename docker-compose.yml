version: '3'
services:
  db:
    image: postgres
      # dbのユーザー名とパスワードでこれが無いとdbが起動できなかった
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSEORD: password
    # docker-composeを停止してもdbの内容が永続化される
    # ホストマシン上に名前付きボリューム postgres_volume が作成され、
    # コンテナ内の /var/lib/postgresql/data ディレクトリとマウントされる
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    # コンテナ停止時に自動的にコンテナが再起動してくれる
    restart: always
  web:
    build: .
    # tmp/pids/server.pidが残ってたら `A server is already running. ~~` のエラーでrailsを起動できないので
    # 事前に消してから、`rails sever` する
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    # 上記のdbイメージで指定したユーザー名とパスワードをrails側でも指定するため環境変数に設定。
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    # ホストのカレントディレクトリ(.)とイメージ内の/myappディレクトリを同期させている
    volumes:
      - .:/myapp
    ports:
       - "3000:3000"
    restart: always
    tty: true # 疑似ターミナル (pseudo-TTY) を割り当て。
    stdin_open: true # コンテナに標準入力を割り当てて実行するよう設定
    depends_on:
      - db
# Docker によって管理される名前付きボリュームが作成される
volumes:
  postgres_volume:

